# Sensors

  # Afvalwijzer
  - platform: afvalwijzer
    provider: afvalstoffendienstkalender
    zipcode: !secret house_zipcode
    housenumber: !secret house_number
    count_today: true

  # Nest
  - platform: badnest

  # Installed hass.io version
  - platform: version
    name: Installed Version
    source: local

  # Latest available version
  - platform: version
    name: Latest Available Version
    beta: false
    source: hassio

  # File size DB
  - platform: filesize
    file_paths:
      - /config/home-assistant_v2.db

  # Last boot time, Disk, memory & CPU usage
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: ipv4_address
        arg: enp3s0
      - type: network_in
        arg: enp3s0
      - type: network_out
        arg: enp3s0

  # DateTime Sensor
  - platform: time_date
    display_options:
      - 'date'
      - 'time'

  # DNSIP
  - platform: dnsip
    name: External IP

  # Aftership
  - platform: aftership
    api_key: !secret aftership_api_key

  # Uptime
  - platform: uptime

  # Hass uptime & Last boot date and time
  - platform: template
    sensors:

      # Home Assistant uptime
      ha_uptime:
        friendly_name: HA Uptime
        value_template: >
          {% if states('sensor.uptime') == '0.0' %} 
            Just restarted...
          {% else %}
            {% macro phrase(value, name) %}
            {%- set value = value | int %}
            {%- set end = 's' if value > 1 else '' %}
            {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
            {%- endmacro %}
            
            {% set weeks = (states('sensor.uptime') | int / 7) | int %}
            {% set days = (states('sensor.uptime') | int) - (weeks * 7) %}
            {% set hours = (states('sensor.uptime') | float - states('sensor.uptime') | int) * 24 %}
            {% set minutes = (hours - hours | int) * 60 %}

            {{ [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') }}
          {% endif %}

      # Last boot date and time
      last_boot_date_time:
        friendly_name: Last Boot
        value_template: >
          {% set date = as_timestamp(states('sensor.last_boot')) | timestamp_custom('%d') %}
          {% set date = '{:01}'.format(date | int) %}
          {% if date in ('1', '21', '31') %}
            {% set date = date ~ 'st' %}
          {% elif date in ('2', '22') %}
            {% set date = date ~ 'nd' %}
          {% elif date in ('3', '23') %}
            {% set date = date ~ 'rd' %}
          {% else %}
            {% set date = date ~ 'th' %}
          {% endif %}

          {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%b %Y') }}

  #----- count entities
  - platform: template
    sensors:

      #----- Count All Entities
      total_entities:
        entity_id: []
        friendly_name: 'Entities'
        icon_template: mdi:code-tags
        value_template: "{{ states | count }}"

      #----- Count Automations
      total_automations:
        entity_id: []
        friendly_name: 'Automations'
        icon_template: mdi:robot
        value_template: "{{ states.automation | list | length }}"

      #----- Count Binary Sensors
      total_binary_sensors:
        entity_id: []
        friendly_name: 'Binary Sensors'
        icon_template: mdi:checkbox-multiple-marked-circle
        value_template: "{{ states.binary_sensor | list | length }}"

      #----- Count Cameras
      total_cameras:
        entity_id: []
        friendly_name: 'Cameras'
        icon_template: mdi:cctv
        value_template: "{{ states.camera | list | length }}"

      #----- Count Counters (haha)
      total_counters:
        entity_id: []
        friendly_name: 'Counters'
        icon_template: mdi:counter
        value_template: "{{ states.counter | list | length }}"

      #----- Count Device Trackers
      total_devicetrackers:
        entity_id: []
        friendly_name: 'Devices'
        icon_template: mdi:cellphone-link
        value_template: "{{ states.device_tracker | list | length }}"

      #----- Count Groups
      total_groups:
        entity_id: []
        friendly_name: 'Groups'
        icon_template: mdi:group
        value_template: "{{ states.group | list | length }}"

      #----- Count Input Booleans
      total_input_booleans:
        entity_id: []
        friendly_name: 'Input Booleans'
        icon_template: mdi:toggle-switch
        value_template: "{{ states.input_boolean | list | length }}"

      #----- Count Input Datetimes
      total_input_datetimes:
        entity_id: []
        friendly_name: 'Input Datetimes'
        icon_template: mdi:calendar-clock
        value_template: "{{ states.input_datetime | list | length }}"

      #----- Count Input Numbers
      total_input_numbers:
        entity_id: []
        friendly_name: 'Input Numbers'
        icon_template: mdi:numeric
        value_template: "{{ states.input_number | list | length }}"

      #----- Count Input Selects
      total_input_selects:
        entity_id: sensor.date
        friendly_name: 'Input Selects'
        icon_template: mdi:format-align-justify
        value_template: "{{ states.input_select | list | length }}"

      #----- Count Input Texts
      total_input_texts:
        entity_id: []
        friendly_name: 'Input Texts'
        icon_template: mdi:alphabetical
        value_template: "{{ states.input_text | list | length }}"

      #----- Count Lights
      total_lights:
        entity_id: sensor.date
        friendly_name: 'Lights'
        icon_template: mdi:lightbulb-on
        value_template: "{{ states.light | list | length }}"

      #----- Count Media Players
      total_media_players:
        entity_id: []
        friendly_name: 'Media Players'
        icon_template: mdi:cast-connected
        value_template: "{{ states.media_player | list | length }}"

      #----- Count Persons
      total_persons:
        entity_id: []
        friendly_name: 'Persons'
        icon_template: mdi:account-multiple
        value_template: "{{ states.person | list | length }}"

      #----- Count Remotes
      total_remotes:
        entity_id: []
        friendly_name: 'Remotes'
        icon_template: mdi:remote
        value_template: "{{ states.remote | list | length }}"

      #----- Count Scenes
      total_scenes:
        entity_id: []
        friendly_name: 'Scenes'
        icon_template: mdi:palette
        value_template: "{{ states.scene | list | length }}"

      #----- Count Scripts
      total_scripts:
        entity_id: []
        friendly_name: 'Scripts'
        icon_template: mdi:script-text-outline
        value_template: "{{ states.script | list | length }}"

      #----- Count Sensors
      total_sensors:
        entity_id: []
        friendly_name: 'Sensors'
        icon_template: mdi:pulse
        value_template: "{{ states.sensor | list | length }}"

      #----- Count Switches
      total_switches:
        entity_id: []
        friendly_name: 'Switches'
        icon_template: mdi:power-socket-us
        value_template: "{{ states.switch | list | length }}"

      #----- Count Timers
      total_timers:
        entity_id: []
        friendly_name: 'Timers'
        icon_template: mdi:timer
        value_template: "{{ states.timer | list | length }}"

      #----- Count Zones
      total_zones:
        entity_id: []
        friendly_name: 'Zones'
        icon_template: mdi:map-marker-radius
        value_template: "{{ states.zone | list | length }}"

      #----- Count Z-Wave Devices
      total_zwave_devices:
        entity_id: []
        friendly_name: 'ZWave'
        icon_template: mdi:z-wave
        value_template: "{{ states.zwave | list | length }}"