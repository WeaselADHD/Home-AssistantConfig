blueprint:
  name: Dynamic Doorbell (WV)
  domain: automation
  source_url: https://raw.githubusercontent.com/AngellusMortis/unifiprotect_blueprints/main/blueprints/automation/unifiprotect/dynamic_doorbell.yaml
  description: "## UniFi Protect Dynamic Doorbell\n\nThis blueprint will dynamically
    update the text on the LCD display for your UniFi Protect Doorbell. Will automatically
    run once per minute and update your Doorbell LCD Screen.\n\nFor this automation
    to run, you need to ensure your doorbell LCD display is set to the \"Default Message\"
    option. This is to still allow you to set static custom messages like \"LEAVE
    PACKAGE AT THE DOOR\" without being overridden by the automation. This behavior
    can be disabled in the options.\n\n### Required Settings\n\n  - UniFi Protect
    Doorbell Sensor\n\n### Optional Settings\n\n  - Text template format you want
    to display (see more below)\n  - Temperature sensor entity so you can display
    temperature on screen\n  - Time formatting string for formatting `{ctime}` template
    (see more below)\n\n### Requirements\n\nTo take full effect of this automation
    blueprint, your Home Assistant instance needs some setup beforehand.\n\n- A UniFi
    Protect NVR running on a UDM Pro, UNVR or other Protect Console\n- Home Assistant
    2022.2.0 or newer with the HA core version of the [UniFi Protect integration][1]\n-
    A UniFi G4 Doorbell or G4 Doorbell Pro\n\n### Text Template\n\nThe text that is
    display on your doorbell is configurable using the templating engine. Any [Home
    Assistant Templating][2] _should_ work in the template.\n\nThe follow variables
    will injected and replaced at render time as well (note the _single_ curly bracket,
    not 2):\n\n  - `{ctime}` -- current time, formatting according to \"Time Format
    String\" option\n  - `{temp}` -- current temperature from the \"Temperature Sensor
    Entity\" option\n\n[1]: https://www.home-assistant.io/integrations/unifiprotect/\n[2]:
    https://www.home-assistant.io/docs/configuration/templating/\n"
  input:
    doorbell_text:
      name: Doorbell Text Entity
      description: 'The doorbell text entity.

        '
      selector:
        entity:
          integration: unifiprotect
          domain: sensor
          multiple: false
    doorbell_set_text:
      name: Doorbell Set Text Entity
      description: 'The doorbell set text entity.

        '
      selector:
        entity:
          integration: unifiprotect
          domain: text
          multiple: false
    temp_entity:
      name: (Optional) Temperature Sensor Entity
      description: Temperature sensor to use. Adds `{temp}` var to template.
      default: ''
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: false
    text_template:
      name: (Optional) Text Template
      description: 'Message template to display on doorbell. Can be any HA template
        string. Final generated string must be 30 characters or less.

        '
      default: Welcome | {ctime} | {temp}
      selector:
        text: {}
    always_run:
      name: (Optional) Ignore current state?
      description: 'Ignore the current state of the doorbell text message. If true,
        will always run every minute, potentially resetting a custom static message
        you set. If false, will only run every minute if the current text is the "Default
        Message" option or the "unknown" (meaning it is already set to a dynamic value).

        '
      default: false
      selector:
        boolean: {}
    time_format:
      name: (Optional) Time Format String
      description: 'Python datetime format code string for the `{ctime}` variable.
        https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes

        '
      default: '%H:%M'
      selector:
        text: {}
mode: single
max_exceeded: silent
variables:
  input_doorbell_text: !input doorbell_text
  input_doorbell_set_text: !input doorbell_set_text
  input_time_format: !input time_format
  input_text_template: !input text_template
  input_temp_entity: !input temp_entity
  input_always_run: !input always_run
trigger:
- platform: time_pattern
  minutes: '*'
condition:
- '{{ input_always_run or is_state(input_doorbell_text, ''unknown'') or states[input_doorbell_text].state.startswith(''Default
  Message'') }}'
action:
- service: text.set_value
  data:
    value: "{%- set ctime=as_local(now()).strftime(input_time_format) -%}\n{%- if
      input_temp_entity != \"\" -%}\n  {%- if is_state(input_temp_entity, 'unavailable')
      -%}\n    {%- set temp=\"\" %}\n  {%- else -%}\n    {%- set temp=\"{}{}\".format(int(states[input_temp_entity].state),
      state_attr(input_temp_entity, \"unit_of_measurement\")) -%}\n  {%- endif -%}\n{%-
      endif -%}\n{{ input_text_template.replace(\"{ctime}\", ctime).replace(\"{temp}\",
      temp) }}\n"
  target:
    entity_id: !input doorbell_set_text
